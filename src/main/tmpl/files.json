[{"fileName":"@types.ts","contents":"export interface IconyakiIcon {\n  id: string;\n  fileName: string;\n  componentName: string;\n  tags: string[];\n  viewBox: string;\n  svgBody: string;\n}\n\nexport interface IconyakiData {\n  icons: IconyakiIcon[];\n}\n"},{"fileName":"IconYaki.tsx","contents":"import styles from \"./iconyaki.module.css\";\n\ninterface IconYakiProps {\n  iconStr: string;\n  viewBox: string;\n}\n\nexport interface IconProps {\n  size?: number;\n  className?: string;\n  role?: string;\n}\n\nconst withIconYaki = ({ iconStr, viewBox }: IconYakiProps) => {\n  return function Icon({ size, className = \"iconyaki\", role = \"iconyaki\", ...rest }: IconProps) {\n    return (\n      <span className={styles.iconyaki} {...rest}>\n        <svg\n          role={role}\n          className={className}\n          viewBox={viewBox}\n          style={{ fontSize: size }}\n          strokeWidth={0}\n          dangerouslySetInnerHTML={{ __html: iconStr }}\n        />\n      </span>\n    );\n  };\n};\n\nexport default withIconYaki;\n"},{"fileName":"iconyaki.module.css","contents":".iconyaki {\n  display: inline-flex;\n  align-items: center;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n}\n\n.iconyaki svg {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  line-height: 1;\n}\n.iconyaki svg path {\n  stroke: currentColor;\n  fill: currentColor;\n}\n"},{"fileName":"index.tsx","contents":""}]